% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fiscal_year.R
\name{fiscal_year}
\alias{fiscal_year}
\title{Add Fiscal Year Column to a Data Frame (using lubridate::quarter)}
\usage{
fiscal_year(
  data,
  date_col_name,
  fy_start_month,
  new_col_name = "FiscalYear",
  fy_format = "FYYY"
)
}
\arguments{
\item{data}{A data.frame.}

\item{date_col_name}{A character string specifying the name of the column in
\code{data} that contains the dates. Dates can be in Date format, POSIXct, or
character strings that \code{lubridate::ymd()} or \code{lubridate::mdy()} can parse.}

\item{fy_start_month}{An integer representing the starting month of the
fiscal year (1 for January, 12 for December).}

\item{new_col_name}{A character string for the name of the new fiscal year
column to be created. Defaults to "FiscalYear".}

\item{fy_format}{A character string specifying the format of the output fiscal
year. Default is "FYYY" (e.g., "FY25"). Other options:
"YYYY" (e.g., "2025" for the year the FY \emph{ends} in),
"FYYYYY" (e.g., "FY2025").}
}
\value{
The input \code{data.frame} with the new fiscal year column added.
}
\description{
Calculates the fiscal year for a given date column using lubridate::quarter()
and adds it as a new column to the input data frame. The fiscal year is
determined by a specified start month.
}
\examples{
# Sample Data
transactions <- data.frame(
  TransactionID = 1:5,
  TransactionDate = as.Date(c("2023-06-15", "2023-07-01", "2023-12-31",
                              "2024-01-01", "2024-08-14")),
  Amount = c(100, 150, 50, 200, 75),
  stringsAsFactors = FALSE
)

# Example 1: FY starts July 1st (common)
transactions_fy_jul <- fiscal_year(
  data = transactions,
  date_col_name = "TransactionDate",
  fy_start_month = 7
)
print(transactions_fy_jul)
# Expected: 2023-06-15 -> FY23, 2023-07-01 -> FY24, 2024-08-14 -> FY25

# Example 2: FY starts October 1st, custom column name, different format
transactions_fy_oct <- fiscal_year(
  data = transactions,
  date_col_name = "TransactionDate",
  fy_start_month = 10,
  new_col_name = "Fiscal_Period",
  fy_format = "YYYY"
)
print(transactions_fy_oct)
# Expected: 2023-06-15 -> 2023, 2023-07-01 -> 2023, 2023-12-31 -> 2024

# Example 3: Character dates (lubridate will try to parse)
transactions_char_dates <- data.frame(
  SaleDate = c("01/15/2023", "08/20/2023", "12/05/2023"), # mdy format
  stringsAsFactors = FALSE
)
transactions_fy_char <- fiscal_year(
  data = transactions_char_dates,
  date_col_name = "SaleDate",
  fy_start_month = 7
)
print(transactions_fy_char)

}
